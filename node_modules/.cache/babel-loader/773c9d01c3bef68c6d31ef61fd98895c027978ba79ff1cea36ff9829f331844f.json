{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./graphs.css';import{Line}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend}from'chart.js';// Register Chart.js components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend);function Graph(){const[lastDraw,setLastDraw]=useState('');const[responseMessage,setResponseMessage]=useState('');const[lastRow,setLastRow]=useState(null);const[redBlackData,setRedBlackData]=useState({red_statistics:[],black_statistics:[]});const[oddEvenData,setOddEvenData]=useState({odd_statistics:[],even_statistics:[]});const[lowHighData,setLowHighData]=useState({low_statistics:[],high_statistics:[]});const[allStatsData,setAllStatsData]=useState({red_statistics:[],black_statistics:[],odd_statistics:[],even_statistics:[],low_statistics:[],high_statistics:[]});// Fetch data on component mount\nuseEffect(()=>{fetchLastRow();fetchStatsData();},[]);const handleAddLastDraw=async()=>{if(isNaN(lastDraw)||lastDraw.trim()===''){alert('Please enter a valid number for the last draw.');return;}try{const payload={number:parseInt(lastDraw,10)};const response=await fetch('http://localhost:8000/add-last-draw',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});if(!response.ok){throw new Error('Failed to send last draw to the backend.');}const data=await response.json();setResponseMessage(data.message||'Last draw added successfully!');setLastDraw('');// Clear the input field\nfetchLastRow();// Refresh the last row\nfetchStatsData();}catch(error){console.error('Error sending last draw:',error);alert('An error occurred while sending the last draw.');}};const handleRemoveLastDraw=async()=>{try{const response=await fetch('http://localhost:8000/remove-last-draw',{method:'DELETE'});if(!response.ok){throw new Error('Failed to remove the last draw.');}const data=await response.json();setResponseMessage(data.message||'Last draw removed successfully!');fetchLastRow();// Refresh the last row\nfetchStatsData();}catch(error){console.error('Error removing last draw:',error);alert('An error occurred while removing the last draw.');}};const fetchLastRow=async()=>{try{const response=await fetch('http://localhost:8000/get-last-row');if(!response.ok){throw new Error('Failed to fetch last row');}const data=await response.json();setLastRow(data.last_row);// Update state with the last row data\n}catch(error){console.error('Error fetching last row:',error);alert('An error occurred while fetching the last row.');}};// Fetch data for red-black, odd-even, and low-high stats\nconst fetchStatsData=async()=>{try{const response=await fetch('http://localhost:8000/get-last-60-stats');if(!response.ok){throw new Error('Failed to fetch all the stats data');}const data=await response.json();setAllStatsData(data);}catch(error){console.error('Error fetching all the stats data:',error);alert('An error occured while fetching all the data.');}};// Chart data for Red-Black stats\nconst redBlackChartData={labels:allStatsData.red_statistics.map((_,index)=>index+1),datasets:[{label:'Red Statistics',data:allStatsData.red_statistics,borderColor:'red',fill:false},{label:'Black Statistics',data:allStatsData.black_statistics,borderColor:'black',fill:false}]};// Chart data for Odd-Even stats\nconst oddEvenChartData={labels:allStatsData.odd_statistics.map((_,index)=>index+1),datasets:[{label:'Odd Statistics',data:allStatsData.odd_statistics,borderColor:'green',fill:false},{label:'Even Statistics',data:allStatsData.even_statistics,borderColor:'blue',fill:false}]};// Chart data for Low-High stats\nconst lowHighChartData={labels:allStatsData.low_statistics.map((_,index)=>index+1),datasets:[{label:'Low Statistics',data:allStatsData.low_statistics,borderColor:'orange',fill:false},{label:'High Statistics',data:allStatsData.high_statistics,borderColor:'purple',fill:false}]};return/*#__PURE__*/_jsxs(\"div\",{className:\"graph\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"last-draw-container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"last-draw\",className:\"last-draw-label\",children:\"Last Draw:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"last-draw\",placeholder:\"Enter last draw\",className:\"last-draw-input\",value:lastDraw,onChange:e=>setLastDraw(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{className:\"last-draw-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"last-draw-button\",onClick:handleAddLastDraw,children:\"Add Last Draw\"}),/*#__PURE__*/_jsx(\"button\",{className:\"last-draw-button\",onClick:handleRemoveLastDraw,children:\"Remove Last Draw\"})]})]}),responseMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"response-message\",children:responseMessage}),/*#__PURE__*/_jsxs(\"div\",{className:\"graph-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"graph-item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Dataframe\"}),lastRow?/*#__PURE__*/_jsx(\"div\",{className:\"dataframe-table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"dataframe-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Number\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Colour\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Odd/Even\"}),/*#__PURE__*/_jsx(\"th\",{children:\"High/Low\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Red Statistic\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Black Statistic\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Odd Statistic\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Even Statistic\"}),/*#__PURE__*/_jsx(\"th\",{children:\"High Statistic\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Low Statistic\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:lastRow.number}),/*#__PURE__*/_jsx(\"td\",{children:lastRow.colour}),/*#__PURE__*/_jsx(\"td\",{children:lastRow.odd_even}),/*#__PURE__*/_jsx(\"td\",{children:lastRow.high_low}),/*#__PURE__*/_jsx(\"td\",{children:lastRow.red_statistic}),/*#__PURE__*/_jsx(\"td\",{children:lastRow.black_statistic}),/*#__PURE__*/_jsx(\"td\",{children:lastRow.odd_statistic}),/*#__PURE__*/_jsx(\"td\",{children:lastRow.even_statistic}),/*#__PURE__*/_jsx(\"td\",{children:lastRow.high_statistic}),/*#__PURE__*/_jsx(\"td\",{children:lastRow.low_statistic})]})})]})}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading last row...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"graph-item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Red-Black Graph\"}),/*#__PURE__*/_jsx(\"div\",{className:\"graph-placeholder\",children:/*#__PURE__*/_jsx(Line,{data:redBlackChartData})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"graph-item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Odd-Even Graph\"}),/*#__PURE__*/_jsx(\"div\",{className:\"graph-placeholder\",children:/*#__PURE__*/_jsx(Line,{data:oddEvenChartData})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"graph-item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Low-High Graph\"}),/*#__PURE__*/_jsx(\"div\",{className:\"graph-placeholder\",children:/*#__PURE__*/_jsx(Line,{data:lowHighChartData})})]})]})]});}export default Graph;","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","Graph","lastDraw","setLastDraw","responseMessage","setResponseMessage","lastRow","setLastRow","redBlackData","setRedBlackData","red_statistics","black_statistics","oddEvenData","setOddEvenData","odd_statistics","even_statistics","lowHighData","setLowHighData","low_statistics","high_statistics","allStatsData","setAllStatsData","fetchLastRow","fetchStatsData","handleAddLastDraw","isNaN","trim","alert","payload","number","parseInt","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","message","error","console","handleRemoveLastDraw","last_row","redBlackChartData","labels","map","_","index","datasets","label","borderColor","fill","oddEvenChartData","lowHighChartData","className","children","htmlFor","type","id","placeholder","value","onChange","e","target","onClick","colour","odd_even","high_low","red_statistic","black_statistic","odd_statistic","even_statistic","high_statistic","low_statistic"],"sources":["D:/roulette_app/roulette_web/src/tabs/graphs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './graphs.css';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n// Register Chart.js components\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nfunction Graph() {\r\n  const [lastDraw, setLastDraw] = useState('');\r\n  const [responseMessage, setResponseMessage] = useState('');\r\n  const [lastRow, setLastRow] = useState(null);\r\n  const [redBlackData, setRedBlackData] = useState({\r\n    red_statistics: [],\r\n    black_statistics: [],\r\n  });\r\n  const [oddEvenData, setOddEvenData] = useState({\r\n    odd_statistics: [],\r\n    even_statistics: [],\r\n  });\r\n  const [lowHighData, setLowHighData] = useState({\r\n    low_statistics: [],\r\n    high_statistics: [],\r\n  });\r\n\r\n  const [allStatsData, setAllStatsData] = useState({\r\n    red_statistics:[],\r\n    black_statistics:[],\r\n    odd_statistics:[],\r\n    even_statistics:[],\r\n    low_statistics:[],\r\n    high_statistics:[]\r\n  });\r\n\r\n  // Fetch data on component mount\r\n  useEffect(() => {\r\n    fetchLastRow();\r\n    fetchStatsData();\r\n  }, []);\r\n\r\n  const handleAddLastDraw = async () => {\r\n    if (isNaN(lastDraw) || lastDraw.trim() === '') {\r\n      alert('Please enter a valid number for the last draw.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const payload = { number: parseInt(lastDraw, 10) };\r\n\r\n      const response = await fetch('http://localhost:8000/add-last-draw', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to send last draw to the backend.');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setResponseMessage(data.message || 'Last draw added successfully!');\r\n      setLastDraw(''); // Clear the input field\r\n      fetchLastRow(); // Refresh the last row\r\n      fetchStatsData();\r\n    } catch (error) {\r\n      console.error('Error sending last draw:', error);\r\n      alert('An error occurred while sending the last draw.');\r\n    }\r\n  };\r\n\r\n  const handleRemoveLastDraw = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/remove-last-draw', {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to remove the last draw.');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setResponseMessage(data.message || 'Last draw removed successfully!');\r\n      fetchLastRow(); // Refresh the last row\r\n      fetchStatsData();\r\n\r\n    } catch (error) {\r\n      console.error('Error removing last draw:', error);\r\n      alert('An error occurred while removing the last draw.');\r\n    }\r\n  };\r\n\r\n  const fetchLastRow = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/get-last-row');\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch last row');\r\n      }\r\n      const data = await response.json();\r\n      setLastRow(data.last_row); // Update state with the last row data\r\n    } catch (error) {\r\n      console.error('Error fetching last row:', error);\r\n      alert('An error occurred while fetching the last row.');\r\n    }\r\n  };\r\n\r\n  // Fetch data for red-black, odd-even, and low-high stats\r\n\r\n  const fetchStatsData = async () => {\r\n    try{\r\n      const response = await fetch('http://localhost:8000/get-last-60-stats');\r\n      if (!response.ok){\r\n        throw new Error('Failed to fetch all the stats data');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setAllStatsData(data);\r\n    } catch(error) {\r\n      console.error('Error fetching all the stats data:', error);\r\n      alert('An error occured while fetching all the data.');\r\n    }\r\n  }\r\n\r\n  // Chart data for Red-Black stats\r\n  const redBlackChartData = {\r\n    labels: allStatsData.red_statistics.map((_, index) => index + 1),\r\n    datasets: [\r\n      {\r\n        label: 'Red Statistics',\r\n        data: allStatsData.red_statistics,\r\n        borderColor: 'red',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Black Statistics',\r\n        data: allStatsData.black_statistics,\r\n        borderColor: 'black',\r\n        fill: false,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Chart data for Odd-Even stats\r\n  const oddEvenChartData = {\r\n    labels: allStatsData.odd_statistics.map((_, index) => index + 1),\r\n    datasets: [\r\n      {\r\n        label: 'Odd Statistics',\r\n        data: allStatsData.odd_statistics,\r\n        borderColor: 'green',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Even Statistics',\r\n        data: allStatsData.even_statistics,\r\n        borderColor: 'blue',\r\n        fill: false,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Chart data for Low-High stats\r\n  const lowHighChartData = {\r\n    labels: allStatsData.low_statistics.map((_, index) => index + 1),\r\n    datasets: [\r\n      {\r\n        label: 'Low Statistics',\r\n        data: allStatsData.low_statistics,\r\n        borderColor: 'orange',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'High Statistics',\r\n        data: allStatsData.high_statistics,\r\n        borderColor: 'purple',\r\n        fill: false,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"graph\">\r\n      {/* Last Draw Section */}\r\n      <div className=\"last-draw-container\">\r\n        <label htmlFor=\"last-draw\" className=\"last-draw-label\">\r\n          Last Draw:\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"last-draw\"\r\n          placeholder=\"Enter last draw\"\r\n          className=\"last-draw-input\"\r\n          value={lastDraw}\r\n          onChange={(e) => setLastDraw(e.target.value)}\r\n        />\r\n        <div className=\"last-draw-buttons\">\r\n          <button className=\"last-draw-button\" onClick={handleAddLastDraw}>\r\n            Add Last Draw\r\n          </button>\r\n          <button className=\"last-draw-button\" onClick={handleRemoveLastDraw}>\r\n            Remove Last Draw\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {responseMessage && <p className=\"response-message\">{responseMessage}</p>}\r\n\r\n      <div className=\"graph-container\">\r\n        {/* Dataframe Section */}\r\n        <div className=\"graph-item\">\r\n          <h4>Dataframe</h4>\r\n          {lastRow ? (\r\n            <div className=\"dataframe-table-container\">\r\n              <table className=\"dataframe-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Number</th>\r\n                    <th>Colour</th>\r\n                    <th>Odd/Even</th>\r\n                    <th>High/Low</th>\r\n                    <th>Red Statistic</th>\r\n                    <th>Black Statistic</th>\r\n                    <th>Odd Statistic</th>\r\n                    <th>Even Statistic</th>\r\n                    <th>High Statistic</th>\r\n                    <th>Low Statistic</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{lastRow.number}</td>\r\n                    <td>{lastRow.colour}</td>\r\n                    <td>{lastRow.odd_even}</td>\r\n                    <td>{lastRow.high_low}</td>\r\n                    <td>{lastRow.red_statistic}</td>\r\n                    <td>{lastRow.black_statistic}</td>\r\n                    <td>{lastRow.odd_statistic}</td>\r\n                    <td>{lastRow.even_statistic}</td>\r\n                    <td>{lastRow.high_statistic}</td>\r\n                    <td>{lastRow.low_statistic}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <p>Loading last row...</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Graphs Section */}\r\n        <div className=\"graph-item\">\r\n          <h4>Red-Black Graph</h4>\r\n          <div className=\"graph-placeholder\">\r\n            <Line data={redBlackChartData} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"graph-item\">\r\n          <h4>Odd-Even Graph</h4>\r\n          <div className=\"graph-placeholder\">\r\n            <Line data={oddEvenChartData} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"graph-item\">\r\n          <h4>Low-High Graph</h4>\r\n          <div className=\"graph-placeholder\">\r\n            <Line data={lowHighChartData} />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Graph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}