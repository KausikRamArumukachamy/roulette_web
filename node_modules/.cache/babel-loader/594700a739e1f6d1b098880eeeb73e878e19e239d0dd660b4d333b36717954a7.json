{"ast":null,"code":"var _jsxFileName = \"D:\\\\roulette_app\\\\roulette_fe\\\\src\\\\tabs\\\\graphs.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import './graphs.css';\n// import { Line } from 'react-chartjs-2';\n// import {\n//   Chart as ChartJS,\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   Title,\n//   Tooltip,\n//   Legend,\n// } from 'chart.js';\n\n// // Register Chart.js components\n// ChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\n// function Graph() {\n//   const [lastDraw, setLastDraw] = useState('');\n//   const [responseMessage, setResponseMessage] = useState('');\n//   const [lastRow, setLastRow] = useState(null);\n//   const [redBlackData, setRedBlackData] = useState({\n//     red_statistics: [],\n//     black_statistics: [],\n//   });\n//   const [oddEvenData, setOddEvenData] = useState({\n//     odd_statistics: [],\n//     even_statistics: [],\n//   });\n//   const [lowHighData, setLowHighData] = useState({\n//     low_statistics: [],\n//     high_statistics: [],\n//   });\n\n//   // Fetch data on component mount\n//   useEffect(() => {\n//     fetchLastRow();\n//     fetchRedBlackData();\n//     fetchOddEvenData();\n//     fetchLowHighData();\n//   }, []);\n\n//   const handleAddLastDraw = async () => {\n//     if (isNaN(lastDraw) || lastDraw.trim() === '') {\n//       alert('Please enter a valid number for the last draw.');\n//       return;\n//     }\n\n//     try {\n//       const payload = { number: parseInt(lastDraw, 10) };\n\n//       const response = await fetch('http://localhost:8000/add-last-draw', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(payload),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to send last draw to the backend.');\n//       }\n\n//       const data = await response.json();\n//       setResponseMessage(data.message || 'Last draw added successfully!');\n//       setLastDraw(''); // Clear the input field\n//       fetchLastRow(); // Refresh the last row\n//       fetchRedBlackData(); // Fetch updated red-black data\n//       fetchOddEvenData(); // Fetch updated odd-even data\n//       fetchLowHighData(); // Fetch updated low-high data\n//     } catch (error) {\n//       console.error('Error sending last draw:', error);\n//       alert('An error occurred while sending the last draw.');\n//     }\n//   };\n\n//   const handleRemoveLastDraw = async () => {\n//     try {\n//       const response = await fetch('http://localhost:8000/remove-last-draw', {\n//         method: 'DELETE',\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to remove the last draw.');\n//       }\n\n//       const data = await response.json();\n//       setResponseMessage(data.message || 'Last draw removed successfully!');\n//       fetchLastRow(); // Refresh the last row\n\n//       // Remove last statistic from all lists\n//       setRedBlackData((prevData) => ({\n//         red_statistics: prevData.red_statistics.slice(0, -1),\n//         black_statistics: prevData.black_statistics.slice(0, -1),\n//       }));\n//       setOddEvenData((prevData) => ({\n//         odd_statistics: prevData.odd_statistics.slice(0, -1),\n//         even_statistics: prevData.even_statistics.slice(0, -1),\n//       }));\n//       setLowHighData((prevData) => ({\n//         low_statistics: prevData.low_statistics.slice(0, -1),\n//         high_statistics: prevData.high_statistics.slice(0, -1),\n//       }));\n//     } catch (error) {\n//       console.error('Error removing last draw:', error);\n//       alert('An error occurred while removing the last draw.');\n//     }\n//   };\n\n//   const fetchLastRow = async () => {\n//     try {\n//       const response = await fetch('http://localhost:8000/get-last-row');\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch last row');\n//       }\n//       const data = await response.json();\n//       setLastRow(data.last_row); // Update state with the last row data\n//     } catch (error) {\n//       console.error('Error fetching last row:', error);\n//       alert('An error occurred while fetching the last row.');\n//     }\n//   };\n\n//   // Fetch data for red-black, odd-even, and low-high stats\n//   const fetchRedBlackData = async () => {\n//     try {\n//       const response = await fetch('http://localhost:8000/get-redblack-stats');\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch red-black data');\n//       }\n\n//       const data = await response.json();\n//       setRedBlackData((prevData) => ({\n//         red_statistics: [...prevData.red_statistics, data.last_red_statistic],\n//         black_statistics: [...prevData.black_statistics, data.last_black_statistic],\n//       }));\n//     } catch (error) {\n//       console.error('Error fetching red-black data:', error);\n//       alert('An error occurred while fetching red-black data.');\n//     }\n//   };\n\n//   const fetchOddEvenData = async () => {\n//     try {\n//       const response = await fetch('http://localhost:8000/get-oddeven-stats');\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch odd-even data');\n//       }\n\n//       const data = await response.json();\n//       setOddEvenData((prevData) => ({\n//         odd_statistics: [...prevData.odd_statistics, data.last_odd_statistic],\n//         even_statistics: [...prevData.even_statistics, data.last_even_statistic],\n//       }));\n//     } catch (error) {\n//       console.error('Error fetching odd-even data:', error);\n//       alert('An error occurred while fetching odd-even data.');\n//     }\n//   };\n\n//   const fetchLowHighData = async () => {\n//     try {\n//       const response = await fetch('http://localhost:8000/get-lowhigh-stats');\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch low-high data');\n//       }\n\n//       const data = await response.json();\n//       setLowHighData((prevData) => ({\n//         low_statistics: [...prevData.low_statistics, data.last_low_statistic],\n//         high_statistics: [...prevData.high_statistics, data.last_high_statistic],\n//       }));\n//     } catch (error) {\n//       console.error('Error fetching low-high data:', error);\n//       alert('An error occurred while fetching low-high data.');\n//     }\n//   };\n\n//   // Chart data for Red-Black stats\n//   const redBlackChartData = {\n//     labels: redBlackData.red_statistics.map((_, index) => index + 1),\n//     datasets: [\n//       {\n//         label: 'Red Statistics',\n//         data: redBlackData.red_statistics,\n//         borderColor: 'red',\n//         fill: false,\n//       },\n//       {\n//         label: 'Black Statistics',\n//         data: redBlackData.black_statistics,\n//         borderColor: 'black',\n//         fill: false,\n//       },\n//     ],\n//   };\n\n//   // Chart data for Odd-Even stats\n//   const oddEvenChartData = {\n//     labels: oddEvenData.odd_statistics.map((_, index) => index + 1),\n//     datasets: [\n//       {\n//         label: 'Odd Statistics',\n//         data: oddEvenData.odd_statistics,\n//         borderColor: 'green',\n//         fill: false,\n//       },\n//       {\n//         label: 'Even Statistics',\n//         data: oddEvenData.even_statistics,\n//         borderColor: 'blue',\n//         fill: false,\n//       },\n//     ],\n//   };\n\n//   // Chart data for Low-High stats\n//   const lowHighChartData = {\n//     labels: lowHighData.low_statistics.map((_, index) => index + 1),\n//     datasets: [\n//       {\n//         label: 'Low Statistics',\n//         data: lowHighData.low_statistics,\n//         borderColor: 'orange',\n//         fill: false,\n//       },\n//       {\n//         label: 'High Statistics',\n//         data: lowHighData.high_statistics,\n//         borderColor: 'purple',\n//         fill: false,\n//       },\n//     ],\n//   };\n\n//   return (\n//     <div className=\"graph\">\n//       {/* Last Draw Section */}\n//       <div className=\"last-draw-container\">\n//         <label htmlFor=\"last-draw\" className=\"last-draw-label\">\n//           Last Draw:\n//         </label>\n//         <input\n//           type=\"number\"\n//           id=\"last-draw\"\n//           placeholder=\"Enter last draw\"\n//           className=\"last-draw-input\"\n//           value={lastDraw}\n//           onChange={(e) => setLastDraw(e.target.value)}\n//         />\n//         <div className=\"last-draw-buttons\">\n//           <button className=\"last-draw-button\" onClick={handleAddLastDraw}>\n//             Add Last Draw\n//           </button>\n//           <button className=\"last-draw-button\" onClick={handleRemoveLastDraw}>\n//             Remove Last Draw\n//           </button>\n//         </div>\n//       </div>\n\n//       {responseMessage && <p className=\"response-message\">{responseMessage}</p>}\n\n//       <div className=\"graph-container\">\n//         {/* Dataframe Section */}\n//         <div className=\"graph-item\">\n//           <h4>Dataframe</h4>\n//           {lastRow ? (\n//             <div className=\"dataframe-table-container\">\n//               <table className=\"dataframe-table\">\n//                 <thead>\n//                   <tr>\n//                     <th>Number</th>\n//                     <th>Colour</th>\n//                     <th>Odd/Even</th>\n//                     <th>High/Low</th>\n//                     <th>Red Statistic</th>\n//                     <th>Black Statistic</th>\n//                     <th>Odd Statistic</th>\n//                     <th>Even Statistic</th>\n//                     <th>High Statistic</th>\n//                     <th>Low Statistic</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   <tr>\n//                     <td>{lastRow.number}</td>\n//                     <td>{lastRow.colour}</td>\n//                     <td>{lastRow.odd_even}</td>\n//                     <td>{lastRow.high_low}</td>\n//                     <td>{lastRow.red_statistic}</td>\n//                     <td>{lastRow.black_statistic}</td>\n//                     <td>{lastRow.odd_statistic}</td>\n//                     <td>{lastRow.even_statistic}</td>\n//                     <td>{lastRow.high_statistic}</td>\n//                     <td>{lastRow.low_statistic}</td>\n//                   </tr>\n//                 </tbody>\n//               </table>\n//             </div>\n//           ) : (\n//             <p>Loading last row...</p>\n//           )}\n//         </div>\n\n//         {/* Graphs Section */}\n//         <div className=\"graph-item\">\n//           <h4>Red-Black Graph</h4>\n//           <div className=\"graph-placeholder\">\n//             <Line data={redBlackChartData} />\n//           </div>\n//         </div>\n\n//         <div className=\"graph-item\">\n//           <h4>Odd-Even Graph</h4>\n//           <div className=\"graph-placeholder\">\n//             <Line data={oddEvenChartData} />\n//           </div>\n//         </div>\n\n//         <div className=\"graph-item\">\n//           <h4>Low-High Graph</h4>\n//           <div className=\"graph-placeholder\">\n//             <Line data={lowHighChartData} />\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Graph;\n\nimport React, { useState, useEffect } from 'react';\nimport './graphs.css';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction Graph() {\n  _s();\n  const [lastDraw, setLastDraw] = useState('');\n  const [responseMessage, setResponseMessage] = useState('');\n  const [lastRow, setLastRow] = useState(null);\n  const [redBlackData, setRedBlackData] = useState({\n    red_statistics: [],\n    black_statistics: []\n  });\n  const [oddEvenData, setOddEvenData] = useState({\n    odd_statistics: [],\n    even_statistics: []\n  });\n  const [lowHighData, setLowHighData] = useState({\n    low_statistics: [],\n    high_statistics: []\n  });\n  const [allStatsData, setAllStatsData] = useState({\n    red_statistics: [],\n    black_statistics: [],\n    odd_statistics: [],\n    even_statistics: [],\n    low_statistics: [],\n    high_statistics: []\n  });\n\n  // Fetch data on component mount\n  useEffect(() => {\n    fetchLastRow();\n    fetchRedBlackData();\n    fetchOddEvenData();\n    fetchLowHighData();\n    fetchStatsData();\n  }, []);\n  const handleAddLastDraw = async () => {\n    if (isNaN(lastDraw) || lastDraw.trim() === '') {\n      alert('Please enter a valid number for the last draw.');\n      return;\n    }\n    try {\n      const payload = {\n        number: parseInt(lastDraw, 10)\n      };\n      const response = await fetch('http://localhost:8000/add-last-draw', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to send last draw to the backend.');\n      }\n      const data = await response.json();\n      setResponseMessage(data.message || 'Last draw added successfully!');\n      setLastDraw(''); // Clear the input field\n      fetchLastRow(); // Refresh the last row\n      fetchRedBlackData(); // Fetch updated red-black data\n      fetchOddEvenData(); // Fetch updated odd-even data\n      fetchLowHighData(); // Fetch updated low-high data\n      fetchStatsData();\n    } catch (error) {\n      console.error('Error sending last draw:', error);\n      alert('An error occurred while sending the last draw.');\n    }\n  };\n  const handleRemoveLastDraw = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/remove-last-draw', {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to remove the last draw.');\n      }\n      const data = await response.json();\n      setResponseMessage(data.message || 'Last draw removed successfully!');\n      fetchLastRow(); // Refresh the last row\n      fetchStatsData();\n\n      // Remove last statistic from all lists\n      setRedBlackData(prevData => ({\n        red_statistics: prevData.red_statistics.slice(0, -1),\n        black_statistics: prevData.black_statistics.slice(0, -1)\n      }));\n      setOddEvenData(prevData => ({\n        odd_statistics: prevData.odd_statistics.slice(0, -1),\n        even_statistics: prevData.even_statistics.slice(0, -1)\n      }));\n      setLowHighData(prevData => ({\n        low_statistics: prevData.low_statistics.slice(0, -1),\n        high_statistics: prevData.high_statistics.slice(0, -1)\n      }));\n    } catch (error) {\n      console.error('Error removing last draw:', error);\n      alert('An error occurred while removing the last draw.');\n    }\n  };\n  const fetchLastRow = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/get-last-row');\n      if (!response.ok) {\n        throw new Error('Failed to fetch last row');\n      }\n      const data = await response.json();\n      setLastRow(data.last_row); // Update state with the last row data\n    } catch (error) {\n      console.error('Error fetching last row:', error);\n      alert('An error occurred while fetching the last row.');\n    }\n  };\n\n  // Fetch data for red-black, odd-even, and low-high stats\n  const fetchRedBlackData = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/get-redblack-stats');\n      if (!response.ok) {\n        throw new Error('Failed to fetch red-black data');\n      }\n      const data = await response.json();\n      setRedBlackData(prevData => ({\n        red_statistics: [...prevData.red_statistics, data.last_red_statistic],\n        black_statistics: [...prevData.black_statistics, data.last_black_statistic]\n      }));\n    } catch (error) {\n      console.error('Error fetching red-black data:', error);\n      alert('An error occurred while fetching red-black data.');\n    }\n  };\n  const fetchOddEvenData = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/get-oddeven-stats');\n      if (!response.ok) {\n        throw new Error('Failed to fetch odd-even data');\n      }\n      const data = await response.json();\n      setOddEvenData(prevData => ({\n        odd_statistics: [...prevData.odd_statistics, data.last_odd_statistic],\n        even_statistics: [...prevData.even_statistics, data.last_even_statistic]\n      }));\n    } catch (error) {\n      console.error('Error fetching odd-even data:', error);\n      alert('An error occurred while fetching odd-even data.');\n    }\n  };\n  const fetchLowHighData = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/get-lowhigh-stats');\n      if (!response.ok) {\n        throw new Error('Failed to fetch low-high data');\n      }\n      const data = await response.json();\n      setLowHighData(prevData => ({\n        low_statistics: [...prevData.low_statistics, data.last_low_statistic],\n        high_statistics: [...prevData.high_statistics, data.last_high_statistic]\n      }));\n    } catch (error) {\n      console.error('Error fetching low-high data:', error);\n      alert('An error occurred while fetching low-high data.');\n    }\n  };\n  const fetchStatsData = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/get-last-60-stats');\n      if (!response.ok) {\n        throw new Error('Failed to fetch all the stats data');\n      }\n      const data = await response.json();\n      setAllStatsData(data);\n    } catch (error) {\n      console.error('Error fetching all the stats data:', error);\n      alert('An error occured while fetching all the data.');\n    }\n  };\n\n  // Chart data for Red-Black stats\n  const redBlackChartData = {\n    labels: allStatsData.red_statistics.map((_, index) => index + 1),\n    datasets: [{\n      label: 'Red Statistics',\n      data: allStatsData.red_statistics,\n      borderColor: 'red',\n      fill: false\n    }, {\n      label: 'Black Statistics',\n      data: allStatsData.black_statistics,\n      borderColor: 'black',\n      fill: false\n    }]\n  };\n\n  // Chart data for Odd-Even stats\n  const oddEvenChartData = {\n    labels: allStatsData.odd_statistics.map((_, index) => index + 1),\n    datasets: [{\n      label: 'Odd Statistics',\n      data: allStatsData.odd_statistics,\n      borderColor: 'green',\n      fill: false\n    }, {\n      label: 'Even Statistics',\n      data: allStatsData.even_statistics,\n      borderColor: 'blue',\n      fill: false\n    }]\n  };\n\n  // Chart data for Low-High stats\n  const lowHighChartData = {\n    labels: allStatsData.low_statistics.map((_, index) => index + 1),\n    datasets: [{\n      label: 'Low Statistics',\n      data: allStatsData.low_statistics,\n      borderColor: 'orange',\n      fill: false\n    }, {\n      label: 'High Statistics',\n      data: allStatsData.high_statistics,\n      borderColor: 'purple',\n      fill: false\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"last-draw-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"last-draw\",\n        className: \"last-draw-label\",\n        children: \"Last Draw:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"last-draw\",\n        placeholder: \"Enter last draw\",\n        className: \"last-draw-input\",\n        value: lastDraw,\n        onChange: e => setLastDraw(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"last-draw-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"last-draw-button\",\n          onClick: handleAddLastDraw,\n          children: \"Add Last Draw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"last-draw-button\",\n          onClick: handleRemoveLastDraw,\n          children: \"Remove Last Draw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 7\n    }, this), responseMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"response-message\",\n      children: responseMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Dataframe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 11\n        }, this), lastRow ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataframe-table-container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"dataframe-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Colour\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Odd/Even\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"High/Low\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 634,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Red Statistic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 635,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Black Statistic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Odd Statistic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Even Statistic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"High Statistic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Low Statistic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: lastRow.number\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 645,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: lastRow.colour\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 646,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: lastRow.odd_even\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 647,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: lastRow.high_low\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: lastRow.red_statistic\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: lastRow.black_statistic\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: lastRow.odd_statistic\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: lastRow.even_statistic\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: lastRow.high_statistic\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 653,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: lastRow.low_statistic\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 654,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading last row...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Red-Black Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-placeholder\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: redBlackChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Odd-Even Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-placeholder\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: oddEvenChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Low-High Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-placeholder\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: lowHighChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"All Stats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-placeholder\",\n          children: Object.entries(allStatsData).map(([statKey, statValues]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: statKey.replace('_', ' ').toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: statValues.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: value\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 17\n            }, this)]\n          }, statKey, true, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 596,\n    columnNumber: 5\n  }, this);\n}\n_s(Graph, \"VrO8tcwV4/HpHghhMmheRT1VhHs=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Graph","_s","lastDraw","setLastDraw","responseMessage","setResponseMessage","lastRow","setLastRow","redBlackData","setRedBlackData","red_statistics","black_statistics","oddEvenData","setOddEvenData","odd_statistics","even_statistics","lowHighData","setLowHighData","low_statistics","high_statistics","allStatsData","setAllStatsData","fetchLastRow","fetchRedBlackData","fetchOddEvenData","fetchLowHighData","fetchStatsData","handleAddLastDraw","isNaN","trim","alert","payload","number","parseInt","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","message","error","console","handleRemoveLastDraw","prevData","slice","last_row","last_red_statistic","last_black_statistic","last_odd_statistic","last_even_statistic","last_low_statistic","last_high_statistic","redBlackChartData","labels","map","_","index","datasets","label","borderColor","fill","oddEvenChartData","lowHighChartData","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","value","onChange","e","target","onClick","colour","odd_even","high_low","red_statistic","black_statistic","odd_statistic","even_statistic","high_statistic","low_statistic","Object","entries","statKey","statValues","replace","toUpperCase","_c","$RefreshReg$"],"sources":["D:/roulette_app/roulette_fe/src/tabs/graphs.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import './graphs.css';\r\n// import { Line } from 'react-chartjs-2';\r\n// import {\r\n//   Chart as ChartJS,\r\n//   CategoryScale,\r\n//   LinearScale,\r\n//   PointElement,\r\n//   LineElement,\r\n//   Title,\r\n//   Tooltip,\r\n//   Legend,\r\n// } from 'chart.js';\r\n\r\n// // Register Chart.js components\r\n// ChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\n// function Graph() {\r\n//   const [lastDraw, setLastDraw] = useState('');\r\n//   const [responseMessage, setResponseMessage] = useState('');\r\n//   const [lastRow, setLastRow] = useState(null);\r\n//   const [redBlackData, setRedBlackData] = useState({\r\n//     red_statistics: [],\r\n//     black_statistics: [],\r\n//   });\r\n//   const [oddEvenData, setOddEvenData] = useState({\r\n//     odd_statistics: [],\r\n//     even_statistics: [],\r\n//   });\r\n//   const [lowHighData, setLowHighData] = useState({\r\n//     low_statistics: [],\r\n//     high_statistics: [],\r\n//   });\r\n\r\n//   // Fetch data on component mount\r\n//   useEffect(() => {\r\n//     fetchLastRow();\r\n//     fetchRedBlackData();\r\n//     fetchOddEvenData();\r\n//     fetchLowHighData();\r\n//   }, []);\r\n\r\n//   const handleAddLastDraw = async () => {\r\n//     if (isNaN(lastDraw) || lastDraw.trim() === '') {\r\n//       alert('Please enter a valid number for the last draw.');\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const payload = { number: parseInt(lastDraw, 10) };\r\n\r\n//       const response = await fetch('http://localhost:8000/add-last-draw', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(payload),\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to send last draw to the backend.');\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       setResponseMessage(data.message || 'Last draw added successfully!');\r\n//       setLastDraw(''); // Clear the input field\r\n//       fetchLastRow(); // Refresh the last row\r\n//       fetchRedBlackData(); // Fetch updated red-black data\r\n//       fetchOddEvenData(); // Fetch updated odd-even data\r\n//       fetchLowHighData(); // Fetch updated low-high data\r\n//     } catch (error) {\r\n//       console.error('Error sending last draw:', error);\r\n//       alert('An error occurred while sending the last draw.');\r\n//     }\r\n//   };\r\n\r\n//   const handleRemoveLastDraw = async () => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:8000/remove-last-draw', {\r\n//         method: 'DELETE',\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to remove the last draw.');\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       setResponseMessage(data.message || 'Last draw removed successfully!');\r\n//       fetchLastRow(); // Refresh the last row\r\n\r\n//       // Remove last statistic from all lists\r\n//       setRedBlackData((prevData) => ({\r\n//         red_statistics: prevData.red_statistics.slice(0, -1),\r\n//         black_statistics: prevData.black_statistics.slice(0, -1),\r\n//       }));\r\n//       setOddEvenData((prevData) => ({\r\n//         odd_statistics: prevData.odd_statistics.slice(0, -1),\r\n//         even_statistics: prevData.even_statistics.slice(0, -1),\r\n//       }));\r\n//       setLowHighData((prevData) => ({\r\n//         low_statistics: prevData.low_statistics.slice(0, -1),\r\n//         high_statistics: prevData.high_statistics.slice(0, -1),\r\n//       }));\r\n//     } catch (error) {\r\n//       console.error('Error removing last draw:', error);\r\n//       alert('An error occurred while removing the last draw.');\r\n//     }\r\n//   };\r\n\r\n//   const fetchLastRow = async () => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:8000/get-last-row');\r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to fetch last row');\r\n//       }\r\n//       const data = await response.json();\r\n//       setLastRow(data.last_row); // Update state with the last row data\r\n//     } catch (error) {\r\n//       console.error('Error fetching last row:', error);\r\n//       alert('An error occurred while fetching the last row.');\r\n//     }\r\n//   };\r\n\r\n//   // Fetch data for red-black, odd-even, and low-high stats\r\n//   const fetchRedBlackData = async () => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:8000/get-redblack-stats');\r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to fetch red-black data');\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       setRedBlackData((prevData) => ({\r\n//         red_statistics: [...prevData.red_statistics, data.last_red_statistic],\r\n//         black_statistics: [...prevData.black_statistics, data.last_black_statistic],\r\n//       }));\r\n//     } catch (error) {\r\n//       console.error('Error fetching red-black data:', error);\r\n//       alert('An error occurred while fetching red-black data.');\r\n//     }\r\n//   };\r\n\r\n//   const fetchOddEvenData = async () => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:8000/get-oddeven-stats');\r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to fetch odd-even data');\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       setOddEvenData((prevData) => ({\r\n//         odd_statistics: [...prevData.odd_statistics, data.last_odd_statistic],\r\n//         even_statistics: [...prevData.even_statistics, data.last_even_statistic],\r\n//       }));\r\n//     } catch (error) {\r\n//       console.error('Error fetching odd-even data:', error);\r\n//       alert('An error occurred while fetching odd-even data.');\r\n//     }\r\n//   };\r\n\r\n//   const fetchLowHighData = async () => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:8000/get-lowhigh-stats');\r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to fetch low-high data');\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       setLowHighData((prevData) => ({\r\n//         low_statistics: [...prevData.low_statistics, data.last_low_statistic],\r\n//         high_statistics: [...prevData.high_statistics, data.last_high_statistic],\r\n//       }));\r\n//     } catch (error) {\r\n//       console.error('Error fetching low-high data:', error);\r\n//       alert('An error occurred while fetching low-high data.');\r\n//     }\r\n//   };\r\n\r\n//   // Chart data for Red-Black stats\r\n//   const redBlackChartData = {\r\n//     labels: redBlackData.red_statistics.map((_, index) => index + 1),\r\n//     datasets: [\r\n//       {\r\n//         label: 'Red Statistics',\r\n//         data: redBlackData.red_statistics,\r\n//         borderColor: 'red',\r\n//         fill: false,\r\n//       },\r\n//       {\r\n//         label: 'Black Statistics',\r\n//         data: redBlackData.black_statistics,\r\n//         borderColor: 'black',\r\n//         fill: false,\r\n//       },\r\n//     ],\r\n//   };\r\n\r\n//   // Chart data for Odd-Even stats\r\n//   const oddEvenChartData = {\r\n//     labels: oddEvenData.odd_statistics.map((_, index) => index + 1),\r\n//     datasets: [\r\n//       {\r\n//         label: 'Odd Statistics',\r\n//         data: oddEvenData.odd_statistics,\r\n//         borderColor: 'green',\r\n//         fill: false,\r\n//       },\r\n//       {\r\n//         label: 'Even Statistics',\r\n//         data: oddEvenData.even_statistics,\r\n//         borderColor: 'blue',\r\n//         fill: false,\r\n//       },\r\n//     ],\r\n//   };\r\n\r\n//   // Chart data for Low-High stats\r\n//   const lowHighChartData = {\r\n//     labels: lowHighData.low_statistics.map((_, index) => index + 1),\r\n//     datasets: [\r\n//       {\r\n//         label: 'Low Statistics',\r\n//         data: lowHighData.low_statistics,\r\n//         borderColor: 'orange',\r\n//         fill: false,\r\n//       },\r\n//       {\r\n//         label: 'High Statistics',\r\n//         data: lowHighData.high_statistics,\r\n//         borderColor: 'purple',\r\n//         fill: false,\r\n//       },\r\n//     ],\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"graph\">\r\n//       {/* Last Draw Section */}\r\n//       <div className=\"last-draw-container\">\r\n//         <label htmlFor=\"last-draw\" className=\"last-draw-label\">\r\n//           Last Draw:\r\n//         </label>\r\n//         <input\r\n//           type=\"number\"\r\n//           id=\"last-draw\"\r\n//           placeholder=\"Enter last draw\"\r\n//           className=\"last-draw-input\"\r\n//           value={lastDraw}\r\n//           onChange={(e) => setLastDraw(e.target.value)}\r\n//         />\r\n//         <div className=\"last-draw-buttons\">\r\n//           <button className=\"last-draw-button\" onClick={handleAddLastDraw}>\r\n//             Add Last Draw\r\n//           </button>\r\n//           <button className=\"last-draw-button\" onClick={handleRemoveLastDraw}>\r\n//             Remove Last Draw\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {responseMessage && <p className=\"response-message\">{responseMessage}</p>}\r\n\r\n//       <div className=\"graph-container\">\r\n//         {/* Dataframe Section */}\r\n//         <div className=\"graph-item\">\r\n//           <h4>Dataframe</h4>\r\n//           {lastRow ? (\r\n//             <div className=\"dataframe-table-container\">\r\n//               <table className=\"dataframe-table\">\r\n//                 <thead>\r\n//                   <tr>\r\n//                     <th>Number</th>\r\n//                     <th>Colour</th>\r\n//                     <th>Odd/Even</th>\r\n//                     <th>High/Low</th>\r\n//                     <th>Red Statistic</th>\r\n//                     <th>Black Statistic</th>\r\n//                     <th>Odd Statistic</th>\r\n//                     <th>Even Statistic</th>\r\n//                     <th>High Statistic</th>\r\n//                     <th>Low Statistic</th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                   <tr>\r\n//                     <td>{lastRow.number}</td>\r\n//                     <td>{lastRow.colour}</td>\r\n//                     <td>{lastRow.odd_even}</td>\r\n//                     <td>{lastRow.high_low}</td>\r\n//                     <td>{lastRow.red_statistic}</td>\r\n//                     <td>{lastRow.black_statistic}</td>\r\n//                     <td>{lastRow.odd_statistic}</td>\r\n//                     <td>{lastRow.even_statistic}</td>\r\n//                     <td>{lastRow.high_statistic}</td>\r\n//                     <td>{lastRow.low_statistic}</td>\r\n//                   </tr>\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           ) : (\r\n//             <p>Loading last row...</p>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Graphs Section */}\r\n//         <div className=\"graph-item\">\r\n//           <h4>Red-Black Graph</h4>\r\n//           <div className=\"graph-placeholder\">\r\n//             <Line data={redBlackChartData} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"graph-item\">\r\n//           <h4>Odd-Even Graph</h4>\r\n//           <div className=\"graph-placeholder\">\r\n//             <Line data={oddEvenChartData} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"graph-item\">\r\n//           <h4>Low-High Graph</h4>\r\n//           <div className=\"graph-placeholder\">\r\n//             <Line data={lowHighChartData} />\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Graph;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport './graphs.css';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n// Register Chart.js components\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nfunction Graph() {\r\n  const [lastDraw, setLastDraw] = useState('');\r\n  const [responseMessage, setResponseMessage] = useState('');\r\n  const [lastRow, setLastRow] = useState(null);\r\n  const [redBlackData, setRedBlackData] = useState({\r\n    red_statistics: [],\r\n    black_statistics: [],\r\n  });\r\n  const [oddEvenData, setOddEvenData] = useState({\r\n    odd_statistics: [],\r\n    even_statistics: [],\r\n  });\r\n  const [lowHighData, setLowHighData] = useState({\r\n    low_statistics: [],\r\n    high_statistics: [],\r\n  });\r\n\r\n  const [allStatsData, setAllStatsData] = useState({\r\n    red_statistics:[],\r\n    black_statistics:[],\r\n    odd_statistics:[],\r\n    even_statistics:[],\r\n    low_statistics:[],\r\n    high_statistics:[]\r\n  });\r\n\r\n  // Fetch data on component mount\r\n  useEffect(() => {\r\n    fetchLastRow();\r\n    fetchRedBlackData();\r\n    fetchOddEvenData();\r\n    fetchLowHighData();\r\n    fetchStatsData();\r\n  }, []);\r\n\r\n  const handleAddLastDraw = async () => {\r\n    if (isNaN(lastDraw) || lastDraw.trim() === '') {\r\n      alert('Please enter a valid number for the last draw.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const payload = { number: parseInt(lastDraw, 10) };\r\n\r\n      const response = await fetch('http://localhost:8000/add-last-draw', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to send last draw to the backend.');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setResponseMessage(data.message || 'Last draw added successfully!');\r\n      setLastDraw(''); // Clear the input field\r\n      fetchLastRow(); // Refresh the last row\r\n      fetchRedBlackData(); // Fetch updated red-black data\r\n      fetchOddEvenData(); // Fetch updated odd-even data\r\n      fetchLowHighData(); // Fetch updated low-high data\r\n      fetchStatsData();\r\n    } catch (error) {\r\n      console.error('Error sending last draw:', error);\r\n      alert('An error occurred while sending the last draw.');\r\n    }\r\n  };\r\n\r\n  const handleRemoveLastDraw = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/remove-last-draw', {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to remove the last draw.');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setResponseMessage(data.message || 'Last draw removed successfully!');\r\n      fetchLastRow(); // Refresh the last row\r\n      fetchStatsData();\r\n\r\n      // Remove last statistic from all lists\r\n      setRedBlackData((prevData) => ({\r\n        red_statistics: prevData.red_statistics.slice(0, -1),\r\n        black_statistics: prevData.black_statistics.slice(0, -1),\r\n      }));\r\n      setOddEvenData((prevData) => ({\r\n        odd_statistics: prevData.odd_statistics.slice(0, -1),\r\n        even_statistics: prevData.even_statistics.slice(0, -1),\r\n      }));\r\n      setLowHighData((prevData) => ({\r\n        low_statistics: prevData.low_statistics.slice(0, -1),\r\n        high_statistics: prevData.high_statistics.slice(0, -1),\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error removing last draw:', error);\r\n      alert('An error occurred while removing the last draw.');\r\n    }\r\n  };\r\n\r\n  const fetchLastRow = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/get-last-row');\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch last row');\r\n      }\r\n      const data = await response.json();\r\n      setLastRow(data.last_row); // Update state with the last row data\r\n    } catch (error) {\r\n      console.error('Error fetching last row:', error);\r\n      alert('An error occurred while fetching the last row.');\r\n    }\r\n  };\r\n\r\n  // Fetch data for red-black, odd-even, and low-high stats\r\n  const fetchRedBlackData = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/get-redblack-stats');\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch red-black data');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setRedBlackData((prevData) => ({\r\n        red_statistics: [...prevData.red_statistics, data.last_red_statistic],\r\n        black_statistics: [...prevData.black_statistics, data.last_black_statistic],\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error fetching red-black data:', error);\r\n      alert('An error occurred while fetching red-black data.');\r\n    }\r\n  };\r\n\r\n  const fetchOddEvenData = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/get-oddeven-stats');\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch odd-even data');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setOddEvenData((prevData) => ({\r\n        odd_statistics: [...prevData.odd_statistics, data.last_odd_statistic],\r\n        even_statistics: [...prevData.even_statistics, data.last_even_statistic],\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error fetching odd-even data:', error);\r\n      alert('An error occurred while fetching odd-even data.');\r\n    }\r\n  };\r\n\r\n  const fetchLowHighData = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/get-lowhigh-stats');\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch low-high data');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setLowHighData((prevData) => ({\r\n        low_statistics: [...prevData.low_statistics, data.last_low_statistic],\r\n        high_statistics: [...prevData.high_statistics, data.last_high_statistic],\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error fetching low-high data:', error);\r\n      alert('An error occurred while fetching low-high data.');\r\n    }\r\n  };\r\n\r\n  const fetchStatsData = async () => {\r\n    try{\r\n      const response = await fetch('http://localhost:8000/get-last-60-stats');\r\n      if (!response.ok){\r\n        throw new Error('Failed to fetch all the stats data');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setAllStatsData(data);\r\n    } catch(error) {\r\n      console.error('Error fetching all the stats data:', error);\r\n      alert('An error occured while fetching all the data.');\r\n    }\r\n  }\r\n\r\n  // Chart data for Red-Black stats\r\n  const redBlackChartData = {\r\n    labels: allStatsData.red_statistics.map((_, index) => index + 1),\r\n    datasets: [\r\n      {\r\n        label: 'Red Statistics',\r\n        data: allStatsData.red_statistics,\r\n        borderColor: 'red',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Black Statistics',\r\n        data: allStatsData.black_statistics,\r\n        borderColor: 'black',\r\n        fill: false,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Chart data for Odd-Even stats\r\n  const oddEvenChartData = {\r\n    labels: allStatsData.odd_statistics.map((_, index) => index + 1),\r\n    datasets: [\r\n      {\r\n        label: 'Odd Statistics',\r\n        data: allStatsData.odd_statistics,\r\n        borderColor: 'green',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Even Statistics',\r\n        data: allStatsData.even_statistics,\r\n        borderColor: 'blue',\r\n        fill: false,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Chart data for Low-High stats\r\n  const lowHighChartData = {\r\n    labels: allStatsData.low_statistics.map((_, index) => index + 1),\r\n    datasets: [\r\n      {\r\n        label: 'Low Statistics',\r\n        data: allStatsData.low_statistics,\r\n        borderColor: 'orange',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'High Statistics',\r\n        data: allStatsData.high_statistics,\r\n        borderColor: 'purple',\r\n        fill: false,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"graph\">\r\n      {/* Last Draw Section */}\r\n      <div className=\"last-draw-container\">\r\n        <label htmlFor=\"last-draw\" className=\"last-draw-label\">\r\n          Last Draw:\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"last-draw\"\r\n          placeholder=\"Enter last draw\"\r\n          className=\"last-draw-input\"\r\n          value={lastDraw}\r\n          onChange={(e) => setLastDraw(e.target.value)}\r\n        />\r\n        <div className=\"last-draw-buttons\">\r\n          <button className=\"last-draw-button\" onClick={handleAddLastDraw}>\r\n            Add Last Draw\r\n          </button>\r\n          <button className=\"last-draw-button\" onClick={handleRemoveLastDraw}>\r\n            Remove Last Draw\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {responseMessage && <p className=\"response-message\">{responseMessage}</p>}\r\n\r\n      <div className=\"graph-container\">\r\n        {/* Dataframe Section */}\r\n        <div className=\"graph-item\">\r\n          <h4>Dataframe</h4>\r\n          {lastRow ? (\r\n            <div className=\"dataframe-table-container\">\r\n              <table className=\"dataframe-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Number</th>\r\n                    <th>Colour</th>\r\n                    <th>Odd/Even</th>\r\n                    <th>High/Low</th>\r\n                    <th>Red Statistic</th>\r\n                    <th>Black Statistic</th>\r\n                    <th>Odd Statistic</th>\r\n                    <th>Even Statistic</th>\r\n                    <th>High Statistic</th>\r\n                    <th>Low Statistic</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{lastRow.number}</td>\r\n                    <td>{lastRow.colour}</td>\r\n                    <td>{lastRow.odd_even}</td>\r\n                    <td>{lastRow.high_low}</td>\r\n                    <td>{lastRow.red_statistic}</td>\r\n                    <td>{lastRow.black_statistic}</td>\r\n                    <td>{lastRow.odd_statistic}</td>\r\n                    <td>{lastRow.even_statistic}</td>\r\n                    <td>{lastRow.high_statistic}</td>\r\n                    <td>{lastRow.low_statistic}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <p>Loading last row...</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Graphs Section */}\r\n        <div className=\"graph-item\">\r\n          <h4>Red-Black Graph</h4>\r\n          <div className=\"graph-placeholder\">\r\n            <Line data={redBlackChartData} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"graph-item\">\r\n          <h4>Odd-Even Graph</h4>\r\n          <div className=\"graph-placeholder\">\r\n            <Line data={oddEvenChartData} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"graph-item\">\r\n          <h4>Low-High Graph</h4>\r\n          <div className=\"graph-placeholder\">\r\n            <Line data={lowHighChartData} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"graph-item\">\r\n          <h4>All Stats</h4>\r\n          <div className=\"graph-placeholder\">\r\n            {Object.entries(allStatsData).map(([statKey, statValues]) => (\r\n              <div key={statKey}>\r\n                <h5>{statKey.replace('_', ' ').toUpperCase()}</h5>\r\n                <ul>\r\n                  {statValues.map((value, index) => (\r\n                    <li key={index}>{value}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Graph;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}