{"ast":null,"code":"import React,{useState}from'react';import'./StackedTab.css';// Keep this for navigation-specific styling\nimport Stats from'./tabs/stats';import Graph from'./tabs/graphs';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function StackedTab(){const[activeTab,setActiveTab]=useState('stats');// Default tab is 'stats'\nconst renderTabContent=()=>{switch(activeTab){case'stats':return/*#__PURE__*/_jsx(Stats,{});// Render Stats component when 'stats' tab is active\ncase'graph':return/*#__PURE__*/_jsx(Graph,{});// Render Graph component when 'graph' tab is active\ndefault:return null;// Return nothing if no valid tab is active\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"StackedApp\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tab-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"tab-button \".concat(activeTab==='stats'?'active':'')// Apply 'active' class based on the activeTab\n,onClick:()=>setActiveTab('stats')// Set activeTab to 'stats'\n,children:\"Stats\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab-button \".concat(activeTab==='graph'?'active':'')// Apply 'active' class based on the activeTab\n,onClick:()=>setActiveTab('graph')// Set activeTab to 'graph'\n,children:\"Graph\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"tab-content\",children:renderTabContent()})]});}export default StackedTab;","map":{"version":3,"names":["React","useState","Stats","Graph","jsx","_jsx","jsxs","_jsxs","StackedTab","activeTab","setActiveTab","renderTabContent","className","children","concat","onClick"],"sources":["D:/roulette_app/roulette_web/src/StackedTab.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './StackedTab.css'; // Keep this for navigation-specific styling\r\nimport Stats from './tabs/stats';\r\nimport Graph from './tabs/graphs';\r\n\r\nfunction StackedTab() {\r\n  const [activeTab, setActiveTab] = useState('stats'); // Default tab is 'stats'\r\n\r\n  const renderTabContent = () => {\r\n    switch (activeTab) {\r\n      case 'stats':\r\n        return <Stats />;  // Render Stats component when 'stats' tab is active\r\n      case 'graph':\r\n        return <Graph />;  // Render Graph component when 'graph' tab is active\r\n      default:\r\n        return null;  // Return nothing if no valid tab is active\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"StackedApp\">\r\n      <div className=\"tab-buttons\">\r\n        <button\r\n          className={`tab-button ${activeTab === 'stats' ? 'active' : ''}`}  // Apply 'active' class based on the activeTab\r\n          onClick={() => setActiveTab('stats')}  // Set activeTab to 'stats'\r\n        >\r\n          Stats\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === 'graph' ? 'active' : ''}`}  // Apply 'active' class based on the activeTab\r\n          onClick={() => setActiveTab('graph')}  // Set activeTab to 'graph'\r\n        >\r\n          Graph\r\n        </button>\r\n      </div>\r\n      <div className=\"tab-content\">{renderTabContent()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StackedTab;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,kBAAkB,CAAE;AAC3B,MAAO,CAAAC,KAAK,KAAM,cAAc,CAChC,MAAO,CAAAC,KAAK,KAAM,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,QAAS,CAAAC,UAAUA,CAAA,CAAG,CACpB,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGT,QAAQ,CAAC,OAAO,CAAC,CAAE;AAErD,KAAM,CAAAU,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,OAAQF,SAAS,EACf,IAAK,OAAO,CACV,mBAAOJ,IAAA,CAACH,KAAK,GAAE,CAAC,CAAG;AACrB,IAAK,OAAO,CACV,mBAAOG,IAAA,CAACF,KAAK,GAAE,CAAC,CAAG;AACrB,QACE,MAAO,KAAI,CAAG;AAClB,CACF,CAAC,CAED,mBACEI,KAAA,QAAKK,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBN,KAAA,QAAKK,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BR,IAAA,WACEO,SAAS,eAAAE,MAAA,CAAgBL,SAAS,GAAK,OAAO,CAAG,QAAQ,CAAG,EAAE,CAAK;AAAA,CACnEM,OAAO,CAAEA,CAAA,GAAML,YAAY,CAAC,OAAO,CAAI;AAAA,CAAAG,QAAA,CACxC,OAED,CAAQ,CAAC,cACTR,IAAA,WACEO,SAAS,eAAAE,MAAA,CAAgBL,SAAS,GAAK,OAAO,CAAG,QAAQ,CAAG,EAAE,CAAK;AAAA,CACnEM,OAAO,CAAEA,CAAA,GAAML,YAAY,CAAC,OAAO,CAAI;AAAA,CAAAG,QAAA,CACxC,OAED,CAAQ,CAAC,EACN,CAAC,cACNR,IAAA,QAAKO,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAEF,gBAAgB,CAAC,CAAC,CAAM,CAAC,EACpD,CAAC,CAEV,CAEA,cAAe,CAAAH,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}